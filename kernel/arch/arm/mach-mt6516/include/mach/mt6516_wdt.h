
#include <mach/mt6516_typedefs.h>

#define		MT6516_WDT_BASE             RGU_BASE                           

#define 	MT6516_WDT_MODE   	        (MT6516_WDT_BASE+0x0000)
#define 	MT6516_WDT_LENGTH 	        (MT6516_WDT_BASE+0x0004)
#define 	MT6516_WDT_RESTART 	        (MT6516_WDT_BASE+0x0008)
#define 	MT6516_WDT_STATUS  	        (MT6516_WDT_BASE+0x000C)
#define 	MT6516_MCU_PERIPH_RESET     (MT6516_WDT_BASE+0x0010) // SW_PERIPH_RSTN
#define 	MT6516_MM_PERIPH_RESET 	    (MT6516_WDT_BASE+0x0014) // SW_DSP_RSTN
#define		MT6516_WDT_RSTL				(MT6516_WDT_BASE+0x0018) // WDT_RSTINTERVAL
#define		MT6516_WDT_STRG				(MT6516_WDT_BASE+0x001C) // WDT_SWRST
#define		MT6516_RGU_USRST0  		    (MT6516_WDT_BASE+0x0020) 
#define		MT6516_RGU_USRST1  		    (MT6516_WDT_BASE+0x0024)
#define		MT6516_RGU_USRST2  		    (MT6516_WDT_BASE+0x0028)
#define		MT6516_RGU_USRST3  		    (MT6516_WDT_BASE+0x002C)
#define		MT6516_RGU_USRST4  		    (MT6516_WDT_BASE+0x0030)
#define		MT6516_RGU_USRST5  		    (MT6516_WDT_BASE+0x0034)
#define		MT6516_RGU_USRST6  		    (MT6516_WDT_BASE+0x0038)
#define		MT6516_RGU_USRST7  		    (MT6516_WDT_BASE+0x003C)
                                         
/*WDT_MODE*/
#define 	MT6516_WDT_MODE_KEYMASK	    0xff00
#define 	MT6516_WDT_MODE_KEY		    0x2200
#define 	MT6516_WDT_MODE_WDTIN_DIS	0x0020
#define 	MT6516_WDT_MODE_AUTORST     0x0010
#define 	MT6516_WDT_RESET_IRQ        0x0008
#define 	MT6516_WDT_MODE_EXTEN	    0x0004
#define 	MT6516_WDT_MODE_EXTPOL	    0x0002
#define 	MT6516_WDT_MODE_ENABLE		0x0001

/*WDT_LENGTH*/
#define 	MT6516_WDT_LENGTH_TOUT		0xffe0
#define 	MT6516_WDT_LENGTH_KEYMASK	0x001f
#define 	MT6516_WDT_LENGTH_KEY		0x0008

/*WDT_RESTART*/
#define 	MT6516_WDT_RESTART_KEY		0x1971

/*WDT_STATUS*/
#define 	MT6516_WDT_STATUS_HWWDT	    0x8000
#define 	MT6516_WDT_STATUS_SWWDT  	0x4000

#if 0
/*MT6516_MCU_PERIPH_RESET*/
#define 	MT6516_MCU_PERIPH_RESET_KEY_MASK 0xFF000000
#define 	MT6516_MCU_PERIPH_RESET_KEY	0x37000000
#endif

/*WDT_RSTL, WDT_RSTINTERVAL*/
#define 	MT6516_RSTL_MASK		  0x0FFF

/*WDT_STRG, WDT_SWRST*/
#define 	MT6516_WDT_STRG_KEY		  0x1209

#if 0
/*MM_PERIPH_RESET*/
#define 	MT6516_MCU_PERIPH_RESET_KEY_MASK	0xFF000000
#define 	MT6516_MM_PERIPH_RESET_KEY		    0x38000000
#endif

#if 0
typedef enum
{
	MT6516_MCU_PERI_USB			=	0,
	MT6516_MCU_PERI_EMI			=	1,
	MT6516_MCU_PERI_IRQ			=	2,
	MT6516_MCU_PERI_DMA			=	3,
	MT6516_MCU_PERI_RESERVED0	=	4,
	MT6516_MCU_PERI_UART0		=	5,
	MT6516_MCU_PERI_UART1		=	6,
	MT6516_MCU_PERI_UART2		=	7,
	MT6516_MCU_PERI_UART3		=	8,
	MT6516_MCU_PERI_UART4		=	9,
	MT6516_MCU_PERI_GPT			=	10,
	MT6516_MCU_PERI_PWM			=	11,
	MT6516_MCU_PERI_RTC			=	12,
	MT6516_MCU_PERI_I2C			=	13,
	MT6516_MCU_PERI_MSDC0		=	14,
	MT6516_MCU_PERI_MSDC1		=	15,
	MT6516_MCU_PERI_MSDC2		=	16,
	MT6516_MCU_PERI_NFI			=	17,
	MT6516_MCU_PERI_RESERVED1	=	18,
	MT6516_MCU_PERI_SPIFLASH	=	19,
	MT6516_MCU_PERI_AUXADC		=	20,
	MT6516_MCU_PERI_SLEEPCTRL	=	21,
	MT6516_MCU_PERI_KEYPAD		=	22,
	MT6516_MCU_PERI_IRDA		=	23
}MT6516_MCU_PERIPH;

typedef enum
{
    MT6516_MM_PERI_GBLRST			=	0,
    MT6516_MM_PERI_DSP				=	1,
    MT6516_MM_PERI_GMC				=	2,
    MT6516_MM_PERI_G2D				=	3,
    MT6516_MM_PERI_GCMQ				=	4,
    MT6516_MM_PERI_RESERVED0		=	5,
    MT6516_MM_PERI_JPEG				=	6,
    MT6516_MM_PERI_IMAGEDMA			=	7,
    MT6516_MM_PERI_CAMERAIF			=	8,
    MT6516_MM_PERI_IMAGE_PROCESSOR	=	9,
    MT6516_MM_PERI_PREVIEW_RESIZER	=	10,
    MT6516_MM_PERI_CAPTURE_RESIZER	=	11,
    MT6516_MM_PERI_DROP_RESIZER		=	12,
    MT6516_MM_PERI_AUDIO_SRC_MIX	=	13,
    MT6516_MM_PERI_RESERVED1		=	14,
    MT6516_MM_PERI_VOICE_FRONT_END	=	15,
    MT6516_MM_PERI_SPI				=	16,
    MT6516_MM_PERI_DSP_INTERFACE	=	17,
    MT6516_MM_PERI_BACKLIGHT		=	18,
    MT6516_MM_PERI_RESERVED2		=	19,
    MT6516_MM_PERI_DECOMPRESS		=	20,
    MT6516_MM_PERI_DPI				=	21,
    MT6516_MM_PERI_LCD				=	22,
    MT6516_MM_PERI_RESERVED3		=	23
}MT6516_MM_PERIPH;
#endif 


void mt6516_wdt_SetTimeOutValue(unsigned short value);

void mt6516_wdt_SetResetLength(unsigned short value);

void mt6516_wdt_ModeSelection(kal_bool en, kal_bool auto_rstart, kal_bool IRQ );

void mt6516_wdt_Restart(void);

void mt6516_wdt_SWTrigger(void);

unsigned char mt6516_wdt_CheckStatus(void);

//kal_bool mt6516_wdt_SW_MCUPeripheralReset(MT6516_MCU_PERIPH MCU_peri);

//kal_bool mt6516_wdt_SW_MMPeripheralReset(MT6516_MM_PERIPH MM_peri);
